"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/lossless-json";
exports.ids = ["vendor-chunks/lossless-json"];
exports.modules = {

/***/ "(ssr)/./node_modules/lossless-json/lib/esm/LosslessNumber.js":
/*!**************************************************************!*\
  !*** ./node_modules/lossless-json/lib/esm/LosslessNumber.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LosslessNumber: () => (/* binding */ LosslessNumber),\n/* harmony export */   isLosslessNumber: () => (/* binding */ isLosslessNumber),\n/* harmony export */   toLosslessNumber: () => (/* binding */ toLosslessNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/lossless-json/lib/esm/utils.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\n\n/**\n * A lossless number. Stores its numeric value as string\n */ var LosslessNumber = /*#__PURE__*/ function() {\n    function LosslessNumber(value) {\n        _classCallCheck(this, LosslessNumber);\n        // numeric value as string\n        // type information\n        _defineProperty(this, \"isLosslessNumber\", true);\n        if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isNumber)(value)) {\n            throw new Error('Invalid number (value: \"' + value + '\")');\n        }\n        this.value = value;\n    }\n    /**\n   * Get the value of the LosslessNumber as number or bigint.\n   *\n   * - a number is returned for safe numbers and decimal values that only lose some insignificant digits\n   * - a bigint is returned for big integer numbers\n   * - an Error is thrown for values that will overflow or underflow\n   *\n   * Note that you can implement your own strategy for conversion by just getting the value as string\n   * via .toString(), and using util functions like isInteger, isSafeNumber, getUnsafeNumberReason,\n   * and toSafeNumberOrThrow to convert it to a numeric value.\n   */ _createClass(LosslessNumber, [\n        {\n            key: \"valueOf\",\n            value: function valueOf() {\n                var unsafeReason = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getUnsafeNumberReason)(this.value);\n                // safe or truncate_float\n                if (unsafeReason === undefined || unsafeReason === _utils_js__WEBPACK_IMPORTED_MODULE_0__.UnsafeNumberReason.truncate_float) {\n                    return parseFloat(this.value);\n                }\n                // truncate_integer\n                if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(this.value)) {\n                    return BigInt(this.value);\n                }\n                // overflow or underflow\n                throw new Error(\"Cannot safely convert to number: \" + \"the value '\".concat(this.value, \"' would \").concat(unsafeReason, \" and become \").concat(parseFloat(this.value)));\n            }\n        },\n        {\n            key: \"toString\",\n            value: function toString() {\n                return this.value;\n            }\n        }\n    ]);\n    return LosslessNumber;\n}();\n/**\n * Test whether a value is a LosslessNumber\n */ function isLosslessNumber(value) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return value && _typeof(value) === \"object\" && value.isLosslessNumber === true || false;\n}\n/**\n * Convert a number into a LosslessNumber if this is possible in a safe way\n * If the value has too many digits, or is NaN or Infinity, an error will be thrown\n */ function toLosslessNumber(value) {\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.extractSignificantDigits)(value + \"\").length > 15) {\n        throw new Error(\"Invalid number: contains more than 15 digits and is most likely truncated and unsafe by itself \" + \"(value: \".concat(value, \")\"));\n    }\n    if (isNaN(value)) {\n        throw new Error(\"Invalid number: NaN\");\n    }\n    if (!isFinite(value)) {\n        throw new Error(\"Invalid number: \" + value);\n    }\n    return new LosslessNumber(String(value));\n} //# sourceMappingURL=LosslessNumber.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lossless-json/lib/esm/LosslessNumber.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lossless-json/lib/esm/config.js":
/*!******************************************************!*\
  !*** ./node_modules/lossless-json/lib/esm/config.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config)\n/* harmony export */ });\n/**\n * Get and/or set configuration options\n * @deprecated There is no config anymore\n */ // eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction config(options) {\n    // Backward compatibility warning for v1.x\n    throw new Error(\"config is deprecated, support for circularRefs is removed from the library. \" + \"If you encounter circular references in your data structures, \" + \"please rethink your datastructures: \" + \"better prevent circular references in the first place.\");\n} //# sourceMappingURL=config.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbG9zc2xlc3MtanNvbi9saWIvZXNtL2NvbmZpZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7OztDQUdDLEdBQUcsNkRBQTZEO0FBQzFELFNBQVNBLE9BQU9DLE9BQU87SUFDNUIsMENBQTBDO0lBQzFDLE1BQU0sSUFBSUMsTUFBTSxpRkFBaUYsbUVBQW1FLHlDQUF5QztBQUMvTSxFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uL25vZGVfbW9kdWxlcy9sb3NzbGVzcy1qc29uL2xpYi9lc20vY29uZmlnLmpzP2Q3NjAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZXQgYW5kL29yIHNldCBjb25maWd1cmF0aW9uIG9wdGlvbnNcbiAqIEBkZXByZWNhdGVkIFRoZXJlIGlzIG5vIGNvbmZpZyBhbnltb3JlXG4gKi8gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuZXhwb3J0IGZ1bmN0aW9uIGNvbmZpZyhvcHRpb25zKSB7XG4gIC8vIEJhY2t3YXJkIGNvbXBhdGliaWxpdHkgd2FybmluZyBmb3IgdjEueFxuICB0aHJvdyBuZXcgRXJyb3IoJ2NvbmZpZyBpcyBkZXByZWNhdGVkLCBzdXBwb3J0IGZvciBjaXJjdWxhclJlZnMgaXMgcmVtb3ZlZCBmcm9tIHRoZSBsaWJyYXJ5LiAnICsgJ0lmIHlvdSBlbmNvdW50ZXIgY2lyY3VsYXIgcmVmZXJlbmNlcyBpbiB5b3VyIGRhdGEgc3RydWN0dXJlcywgJyArICdwbGVhc2UgcmV0aGluayB5b3VyIGRhdGFzdHJ1Y3R1cmVzOiAnICsgJ2JldHRlciBwcmV2ZW50IGNpcmN1bGFyIHJlZmVyZW5jZXMgaW4gdGhlIGZpcnN0IHBsYWNlLicpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uZmlnLmpzLm1hcCJdLCJuYW1lcyI6WyJjb25maWciLCJvcHRpb25zIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lossless-json/lib/esm/config.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lossless-json/lib/esm/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/lossless-json/lib/esm/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LosslessNumber: () => (/* reexport safe */ _LosslessNumber_js__WEBPACK_IMPORTED_MODULE_3__.LosslessNumber),\n/* harmony export */   UnsafeNumberReason: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.UnsafeNumberReason),\n/* harmony export */   config: () => (/* reexport safe */ _config_js__WEBPACK_IMPORTED_MODULE_0__.config),\n/* harmony export */   getUnsafeNumberReason: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.getUnsafeNumberReason),\n/* harmony export */   isInteger: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.isInteger),\n/* harmony export */   isLosslessNumber: () => (/* reexport safe */ _LosslessNumber_js__WEBPACK_IMPORTED_MODULE_3__.isLosslessNumber),\n/* harmony export */   isNumber: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.isNumber),\n/* harmony export */   isSafeNumber: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.isSafeNumber),\n/* harmony export */   parse: () => (/* reexport safe */ _parse_js__WEBPACK_IMPORTED_MODULE_1__.parse),\n/* harmony export */   parseLosslessNumber: () => (/* reexport safe */ _numberParsers_js__WEBPACK_IMPORTED_MODULE_5__.parseLosslessNumber),\n/* harmony export */   parseNumberAndBigInt: () => (/* reexport safe */ _numberParsers_js__WEBPACK_IMPORTED_MODULE_5__.parseNumberAndBigInt),\n/* harmony export */   reviveDate: () => (/* reexport safe */ _reviveDate_js__WEBPACK_IMPORTED_MODULE_4__.reviveDate),\n/* harmony export */   stringify: () => (/* reexport safe */ _stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify),\n/* harmony export */   toLosslessNumber: () => (/* reexport safe */ _LosslessNumber_js__WEBPACK_IMPORTED_MODULE_3__.toLosslessNumber),\n/* harmony export */   toSafeNumberOrThrow: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.toSafeNumberOrThrow)\n/* harmony export */ });\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.js */ \"(ssr)/./node_modules/lossless-json/lib/esm/config.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse.js */ \"(ssr)/./node_modules/lossless-json/lib/esm/parse.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringify.js */ \"(ssr)/./node_modules/lossless-json/lib/esm/stringify.js\");\n/* harmony import */ var _LosslessNumber_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./LosslessNumber.js */ \"(ssr)/./node_modules/lossless-json/lib/esm/LosslessNumber.js\");\n/* harmony import */ var _reviveDate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reviveDate.js */ \"(ssr)/./node_modules/lossless-json/lib/esm/reviveDate.js\");\n/* harmony import */ var _numberParsers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./numberParsers.js */ \"(ssr)/./node_modules/lossless-json/lib/esm/numberParsers.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/lossless-json/lib/esm/utils.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/lossless-json/lib/esm/types.js\");\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbG9zc2xlc3MtanNvbi9saWIvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXFDO0FBQ0Y7QUFDUTtBQUM4QztBQUM1QztBQUNrQztBQUNnRDtBQUNwRyxDQUMzQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi9ub2RlX21vZHVsZXMvbG9zc2xlc3MtanNvbi9saWIvZXNtL2luZGV4LmpzPzI4Y2IiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgY29uZmlnIH0gZnJvbSAnLi9jb25maWcuanMnO1xuZXhwb3J0IHsgcGFyc2UgfSBmcm9tICcuL3BhcnNlLmpzJztcbmV4cG9ydCB7IHN0cmluZ2lmeSB9IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcbmV4cG9ydCB7IExvc3NsZXNzTnVtYmVyLCBpc0xvc3NsZXNzTnVtYmVyLCB0b0xvc3NsZXNzTnVtYmVyIH0gZnJvbSAnLi9Mb3NzbGVzc051bWJlci5qcyc7XG5leHBvcnQgeyByZXZpdmVEYXRlIH0gZnJvbSAnLi9yZXZpdmVEYXRlLmpzJztcbmV4cG9ydCB7IHBhcnNlTG9zc2xlc3NOdW1iZXIsIHBhcnNlTnVtYmVyQW5kQmlnSW50IH0gZnJvbSAnLi9udW1iZXJQYXJzZXJzLmpzJztcbmV4cG9ydCB7IFVuc2FmZU51bWJlclJlYXNvbiwgaXNJbnRlZ2VyLCBpc051bWJlciwgaXNTYWZlTnVtYmVyLCB0b1NhZmVOdW1iZXJPclRocm93LCBnZXRVbnNhZmVOdW1iZXJSZWFzb24gfSBmcm9tICcuL3V0aWxzLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vdHlwZXMuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbImNvbmZpZyIsInBhcnNlIiwic3RyaW5naWZ5IiwiTG9zc2xlc3NOdW1iZXIiLCJpc0xvc3NsZXNzTnVtYmVyIiwidG9Mb3NzbGVzc051bWJlciIsInJldml2ZURhdGUiLCJwYXJzZUxvc3NsZXNzTnVtYmVyIiwicGFyc2VOdW1iZXJBbmRCaWdJbnQiLCJVbnNhZmVOdW1iZXJSZWFzb24iLCJpc0ludGVnZXIiLCJpc051bWJlciIsImlzU2FmZU51bWJlciIsInRvU2FmZU51bWJlck9yVGhyb3ciLCJnZXRVbnNhZmVOdW1iZXJSZWFzb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lossless-json/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lossless-json/lib/esm/numberParsers.js":
/*!*************************************************************!*\
  !*** ./node_modules/lossless-json/lib/esm/numberParsers.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseLosslessNumber: () => (/* binding */ parseLosslessNumber),\n/* harmony export */   parseNumberAndBigInt: () => (/* binding */ parseNumberAndBigInt)\n/* harmony export */ });\n/* harmony import */ var _LosslessNumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LosslessNumber.js */ \"(ssr)/./node_modules/lossless-json/lib/esm/LosslessNumber.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/lossless-json/lib/esm/utils.js\");\n\n\nfunction parseLosslessNumber(value) {\n    return new _LosslessNumber_js__WEBPACK_IMPORTED_MODULE_0__.LosslessNumber(value);\n}\nfunction parseNumberAndBigInt(value) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isInteger)(value) ? BigInt(value) : parseFloat(value);\n} //# sourceMappingURL=numberParsers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbG9zc2xlc3MtanNvbi9saWIvZXNtL251bWJlclBhcnNlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxRDtBQUNkO0FBQ2hDLFNBQVNFLG9CQUFvQkMsS0FBSztJQUN2QyxPQUFPLElBQUlILDhEQUFjQSxDQUFDRztBQUM1QjtBQUNPLFNBQVNDLHFCQUFxQkQsS0FBSztJQUN4QyxPQUFPRixvREFBU0EsQ0FBQ0UsU0FBU0UsT0FBT0YsU0FBU0csV0FBV0g7QUFDdkQsRUFDQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi9ub2RlX21vZHVsZXMvbG9zc2xlc3MtanNvbi9saWIvZXNtL251bWJlclBhcnNlcnMuanM/M2RkNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMb3NzbGVzc051bWJlciB9IGZyb20gJy4vTG9zc2xlc3NOdW1iZXIuanMnO1xuaW1wb3J0IHsgaXNJbnRlZ2VyIH0gZnJvbSAnLi91dGlscy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VMb3NzbGVzc051bWJlcih2YWx1ZSkge1xuICByZXR1cm4gbmV3IExvc3NsZXNzTnVtYmVyKHZhbHVlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZU51bWJlckFuZEJpZ0ludCh2YWx1ZSkge1xuICByZXR1cm4gaXNJbnRlZ2VyKHZhbHVlKSA/IEJpZ0ludCh2YWx1ZSkgOiBwYXJzZUZsb2F0KHZhbHVlKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW51bWJlclBhcnNlcnMuanMubWFwIl0sIm5hbWVzIjpbIkxvc3NsZXNzTnVtYmVyIiwiaXNJbnRlZ2VyIiwicGFyc2VMb3NzbGVzc051bWJlciIsInZhbHVlIiwicGFyc2VOdW1iZXJBbmRCaWdJbnQiLCJCaWdJbnQiLCJwYXJzZUZsb2F0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lossless-json/lib/esm/numberParsers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lossless-json/lib/esm/parse.js":
/*!*****************************************************!*\
  !*** ./node_modules/lossless-json/lib/esm/parse.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codeLowercaseA: () => (/* binding */ codeLowercaseA),\n/* harmony export */   codeLowercaseE: () => (/* binding */ codeLowercaseE),\n/* harmony export */   codeLowercaseF: () => (/* binding */ codeLowercaseF),\n/* harmony export */   codeUppercaseA: () => (/* binding */ codeUppercaseA),\n/* harmony export */   codeUppercaseE: () => (/* binding */ codeUppercaseE),\n/* harmony export */   codeUppercaseF: () => (/* binding */ codeUppercaseF),\n/* harmony export */   isDeepEqual: () => (/* binding */ isDeepEqual),\n/* harmony export */   isValidStringCharacter: () => (/* binding */ isValidStringCharacter),\n/* harmony export */   parse: () => (/* binding */ parse)\n/* harmony export */ });\n/* harmony import */ var _numberParsers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./numberParsers.js */ \"(ssr)/./node_modules/lossless-json/lib/esm/numberParsers.js\");\n/* harmony import */ var _revive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./revive.js */ \"(ssr)/./node_modules/lossless-json/lib/esm/revive.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\n/**\n * The LosslessJSON.parse() method parses a string as JSON, optionally transforming\n * the value produced by parsing.\n *\n * The parser is based on the parser of Tan Li Hou shared in\n * https://lihautan.com/json-parser-with-javascript/\n *\n * @param text\n * The string to parse as JSON. See the JSON object for a description of JSON syntax.\n *\n * @param [reviver]\n * If a function, prescribes how the value originally produced by parsing is\n * transformed, before being returned.\n *\n * @param [parseNumber=parseLosslessNumber]\n * Pass a custom number parser. Input is a string, and the output can be unknown\n * numeric value: number, bigint, LosslessNumber, or a custom BigNumber library.\n *\n * @returns Returns the Object corresponding to the given JSON text.\n *\n * @throws Throws a SyntaxError exception if the string to parse is not valid JSON.\n */ function parse(text, reviver) {\n    var parseNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _numberParsers_js__WEBPACK_IMPORTED_MODULE_0__.parseLosslessNumber;\n    var i = 0;\n    var value = parseValue();\n    expectValue(value);\n    expectEndOfInput();\n    return reviver ? (0,_revive_js__WEBPACK_IMPORTED_MODULE_1__.revive)(value, reviver) : value;\n    function parseObject() {\n        if (text.charCodeAt(i) === codeOpeningBrace) {\n            i++;\n            skipWhitespace();\n            var object = {};\n            var initial = true;\n            while(i < text.length && text.charCodeAt(i) !== codeClosingBrace){\n                if (!initial) {\n                    eatComma();\n                    skipWhitespace();\n                } else {\n                    initial = false;\n                }\n                var start = i;\n                var key = parseString();\n                if (key === undefined) {\n                    throwObjectKeyExpected();\n                }\n                skipWhitespace();\n                eatColon();\n                var _value = parseValue();\n                if (_value === undefined) {\n                    throwObjectValueExpected();\n                }\n                // TODO: test deep equal instead of strict equal\n                if (Object.prototype.hasOwnProperty.call(object, key) && !isDeepEqual(_value, object[key])) {\n                    // Note that we could also test `if(key in object) {...}`\n                    // or `if (object[key] !== 'undefined') {...}`, but that is slower.\n                    throwDuplicateKey(key, start + 1);\n                }\n                object[key] = _value;\n            }\n            if (text.charCodeAt(i) !== codeClosingBrace) {\n                throwObjectKeyOrEndExpected();\n            }\n            i++;\n            return object;\n        }\n    }\n    function parseArray() {\n        if (text.charCodeAt(i) === codeOpeningBracket) {\n            i++;\n            skipWhitespace();\n            var array = [];\n            var initial = true;\n            while(i < text.length && text.charCodeAt(i) !== codeClosingBracket){\n                if (!initial) {\n                    eatComma();\n                } else {\n                    initial = false;\n                }\n                var _value2 = parseValue();\n                expectArrayItem(_value2);\n                array.push(_value2);\n            }\n            if (text.charCodeAt(i) !== codeClosingBracket) {\n                throwArrayItemOrEndExpected();\n            }\n            i++;\n            return array;\n        }\n    }\n    function parseValue() {\n        var _ref, _ref2, _ref3, _ref4, _ref5, _parseString;\n        skipWhitespace();\n        var value = (_ref = (_ref2 = (_ref3 = (_ref4 = (_ref5 = (_parseString = parseString()) !== null && _parseString !== void 0 ? _parseString : parseNumeric()) !== null && _ref5 !== void 0 ? _ref5 : parseObject()) !== null && _ref4 !== void 0 ? _ref4 : parseArray()) !== null && _ref3 !== void 0 ? _ref3 : parseKeyword(\"true\", true)) !== null && _ref2 !== void 0 ? _ref2 : parseKeyword(\"false\", false)) !== null && _ref !== void 0 ? _ref : parseKeyword(\"null\", null);\n        skipWhitespace();\n        return value;\n    }\n    function parseKeyword(name, value) {\n        if (text.slice(i, i + name.length) === name) {\n            i += name.length;\n            return value;\n        }\n    }\n    function skipWhitespace() {\n        while(isWhitespace(text.charCodeAt(i))){\n            i++;\n        }\n    }\n    function parseString() {\n        if (text.charCodeAt(i) === codeDoubleQuote) {\n            i++;\n            var result = \"\";\n            while(i < text.length && text.charCodeAt(i) !== codeDoubleQuote){\n                if (text.charCodeAt(i) === codeBackslash) {\n                    var char = text[i + 1];\n                    var escapeChar = escapeCharacters[char];\n                    if (escapeChar !== undefined) {\n                        result += escapeChar;\n                        i++;\n                    } else if (char === \"u\") {\n                        if (isHex(text.charCodeAt(i + 2)) && isHex(text.charCodeAt(i + 3)) && isHex(text.charCodeAt(i + 4)) && isHex(text.charCodeAt(i + 5))) {\n                            result += String.fromCharCode(parseInt(text.slice(i + 2, i + 6), 16));\n                            i += 5;\n                        } else {\n                            throwInvalidUnicodeCharacter(i);\n                        }\n                    } else {\n                        throwInvalidEscapeCharacter(i);\n                    }\n                } else {\n                    if (isValidStringCharacter(text.charCodeAt(i))) {\n                        result += text[i];\n                    } else {\n                        throwInvalidCharacter(text[i]);\n                    }\n                }\n                i++;\n            }\n            expectEndOfString();\n            i++;\n            return result;\n        }\n    }\n    function parseNumeric() {\n        var start = i;\n        if (text.charCodeAt(i) === codeMinus) {\n            i++;\n            expectDigit(start);\n        }\n        if (text.charCodeAt(i) === codeZero) {\n            i++;\n        } else if (isNonZeroDigit(text.charCodeAt(i))) {\n            i++;\n            while(isDigit(text.charCodeAt(i))){\n                i++;\n            }\n        }\n        if (text.charCodeAt(i) === codeDot) {\n            i++;\n            expectDigit(start);\n            while(isDigit(text.charCodeAt(i))){\n                i++;\n            }\n        }\n        if (text.charCodeAt(i) === codeLowercaseE || text.charCodeAt(i) === codeUppercaseE) {\n            i++;\n            if (text.charCodeAt(i) === codeMinus || text.charCodeAt(i) === codePlus) {\n                i++;\n            }\n            expectDigit(start);\n            while(isDigit(text.charCodeAt(i))){\n                i++;\n            }\n        }\n        if (i > start) {\n            return parseNumber(text.slice(start, i));\n        }\n    }\n    function eatComma() {\n        if (text.charCodeAt(i) !== codeComma) {\n            throw new SyntaxError(\"Comma ',' expected after value \".concat(gotAt()));\n        }\n        i++;\n    }\n    function eatColon() {\n        if (text.charCodeAt(i) !== codeColon) {\n            throw new SyntaxError(\"Colon ':' expected after property name \".concat(gotAt()));\n        }\n        i++;\n    }\n    function expectValue(value) {\n        if (value === undefined) {\n            throw new SyntaxError(\"JSON value expected \".concat(gotAt()));\n        }\n    }\n    function expectArrayItem(value) {\n        if (value === undefined) {\n            throw new SyntaxError(\"Array item expected \".concat(gotAt()));\n        }\n    }\n    function expectEndOfInput() {\n        if (i < text.length) {\n            throw new SyntaxError(\"Expected end of input \".concat(gotAt()));\n        }\n    }\n    function expectDigit(start) {\n        if (!isDigit(text.charCodeAt(i))) {\n            var numSoFar = text.slice(start, i);\n            throw new SyntaxError(\"Invalid number '\".concat(numSoFar, \"', expecting a digit \").concat(gotAt()));\n        }\n    }\n    function expectEndOfString() {\n        if (text.charCodeAt(i) !== codeDoubleQuote) {\n            throw new SyntaxError(\"End of string '\\\"' expected \".concat(gotAt()));\n        }\n    }\n    function throwObjectKeyExpected() {\n        throw new SyntaxError(\"Quoted object key expected \".concat(gotAt()));\n    }\n    function throwDuplicateKey(key, pos) {\n        throw new SyntaxError(\"Duplicate key '\".concat(key, \"' encountered at position \").concat(pos));\n    }\n    function throwObjectKeyOrEndExpected() {\n        throw new SyntaxError(\"Quoted object key or end of object '}' expected \".concat(gotAt()));\n    }\n    function throwArrayItemOrEndExpected() {\n        throw new SyntaxError(\"Array item or end of array ']' expected \".concat(gotAt()));\n    }\n    function throwInvalidCharacter(char) {\n        throw new SyntaxError(\"Invalid character '\".concat(char, \"' \").concat(pos()));\n    }\n    function throwInvalidEscapeCharacter(start) {\n        var chars = text.slice(start, start + 2);\n        throw new SyntaxError(\"Invalid escape character '\".concat(chars, \"' \").concat(pos()));\n    }\n    function throwObjectValueExpected() {\n        throw new SyntaxError(\"Object value expected after ':' \".concat(pos()));\n    }\n    function throwInvalidUnicodeCharacter(start) {\n        var end = start + 2;\n        while(/\\w/.test(text[end])){\n            end++;\n        }\n        var chars = text.slice(start, end);\n        throw new SyntaxError(\"Invalid unicode character '\".concat(chars, \"' \").concat(pos()));\n    }\n    // zero based character position\n    function pos() {\n        return \"at position \".concat(i);\n    }\n    function got() {\n        return i < text.length ? \"but got '\".concat(text[i], \"'\") : \"but reached end of input\";\n    }\n    function gotAt() {\n        return got() + \" \" + pos();\n    }\n}\nfunction isWhitespace(code) {\n    return code === codeSpace || code === codeNewline || code === codeTab || code === codeReturn;\n}\nfunction isHex(code) {\n    return code >= codeZero && code <= codeNine || code >= codeUppercaseA && code <= codeUppercaseF || code >= codeLowercaseA && code <= codeLowercaseF;\n}\nfunction isDigit(code) {\n    return code >= codeZero && code <= codeNine;\n}\nfunction isNonZeroDigit(code) {\n    return code >= codeOne && code <= codeNine;\n}\nfunction isValidStringCharacter(code) {\n    return code >= 0x20 && code <= 0x10ffff;\n}\nfunction isDeepEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (Array.isArray(a) && Array.isArray(b)) {\n        return a.length === b.length && a.every(function(item, index) {\n            return isDeepEqual(item, b[index]);\n        });\n    }\n    if (isObject(a) && isObject(b)) {\n        var keys = _toConsumableArray(new Set([].concat(_toConsumableArray(Object.keys(a)), _toConsumableArray(Object.keys(b)))));\n        return keys.every(function(key) {\n            return isDeepEqual(a[key], b[key]);\n        });\n    }\n    return false;\n}\nfunction isObject(value) {\n    return _typeof(value) === \"object\" && value !== null;\n}\n// map with all escape characters\nvar escapeCharacters = {\n    '\"': '\"',\n    \"\\\\\": \"\\\\\",\n    \"/\": \"/\",\n    b: \"\\b\",\n    f: \"\\f\",\n    n: \"\\n\",\n    r: \"\\r\",\n    t: \"\t\"\n};\nvar codeBackslash = 0x5c; // \"\\\"\nvar codeOpeningBrace = 0x7b; // \"{\"\nvar codeClosingBrace = 0x7d; // \"}\"\nvar codeOpeningBracket = 0x5b; // \"[\"\nvar codeClosingBracket = 0x5d; // \"]\"\nvar codeSpace = 0x20; // \" \"\nvar codeNewline = 0xa; // \"\\n\"\nvar codeTab = 0x9; // \"\\t\"\nvar codeReturn = 0xd; // \"\\r\"\nvar codeDoubleQuote = 0x0022; // \"\nvar codePlus = 0x2b; // \"+\"\nvar codeMinus = 0x2d; // \"-\"\nvar codeZero = 0x30;\nvar codeOne = 0x31;\nvar codeNine = 0x39;\nvar codeComma = 0x2c; // \",\"\nvar codeDot = 0x2e; // \".\" (dot, period)\nvar codeColon = 0x3a; // \":\"\nvar codeUppercaseA = 0x41; // \"A\"\nvar codeLowercaseA = 0x61; // \"a\"\nvar codeUppercaseE = 0x45; // \"E\"\nvar codeLowercaseE = 0x65; // \"e\"\nvar codeUppercaseF = 0x46; // \"F\"\nvar codeLowercaseF = 0x66; // \"f\"\n //# sourceMappingURL=parse.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lossless-json/lib/esm/parse.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lossless-json/lib/esm/revive.js":
/*!******************************************************!*\
  !*** ./node_modules/lossless-json/lib/esm/revive.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   revive: () => (/* binding */ revive)\n/* harmony export */ });\n/* harmony import */ var _LosslessNumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LosslessNumber.js */ \"(ssr)/./node_modules/lossless-json/lib/esm/LosslessNumber.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\n\n/**\n * Revive a json object.\n * Applies the reviver function recursively on all values in the JSON object.\n * @param json   A JSON Object, Array, or value\n * @param reviver\n *              A reviver function invoked with arguments `key` and `value`,\n *              which must return a replacement value. The function context\n *              (`this`) is the Object or Array that contains the currently\n *              handled value.\n */ function revive(json, reviver) {\n    return reviveValue({\n        \"\": json\n    }, \"\", json, reviver);\n}\n/**\n * Revive a value\n */ function reviveValue(context, key, value, reviver) {\n    if (Array.isArray(value)) {\n        return reviver.call(context, key, reviveArray(value, reviver));\n    } else if (value && _typeof(value) === \"object\" && !(0,_LosslessNumber_js__WEBPACK_IMPORTED_MODULE_0__.isLosslessNumber)(value)) {\n        // note the special case for LosslessNumber,\n        // we don't want to iterate over the internals of a LosslessNumber\n        return reviver.call(context, key, reviveObject(value, reviver));\n    } else {\n        return reviver.call(context, key, value);\n    }\n}\n/**\n * Revive the properties of an object\n */ function reviveObject(object, reviver) {\n    Object.keys(object).forEach(function(key) {\n        var value = reviveValue(object, key, object[key], reviver);\n        if (value !== undefined) {\n            object[key] = value;\n        } else {\n            delete object[key];\n        }\n    });\n    return object;\n}\n/**\n * Revive the properties of an Array\n */ function reviveArray(array, reviver) {\n    for(var i = 0; i < array.length; i++){\n        array[i] = reviveValue(array, i + \"\", array[i], reviver);\n    }\n    return array;\n} //# sourceMappingURL=revive.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbG9zc2xlc3MtanNvbi9saWIvZXNtL3Jldml2ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLFNBQVNBLFFBQVFDLEdBQUc7SUFBSTtJQUEyQixPQUFPRCxVQUFVLGNBQWMsT0FBT0UsVUFBVSxZQUFZLE9BQU9BLE9BQU9DLFFBQVEsR0FBRyxTQUFVRixHQUFHO1FBQUksT0FBTyxPQUFPQTtJQUFLLElBQUksU0FBVUEsR0FBRztRQUFJLE9BQU9BLE9BQU8sY0FBYyxPQUFPQyxVQUFVRCxJQUFJRyxXQUFXLEtBQUtGLFVBQVVELFFBQVFDLE9BQU9HLFNBQVMsR0FBRyxXQUFXLE9BQU9KO0lBQUssR0FBR0QsUUFBUUM7QUFBTTtBQUN4UjtBQUN2RDs7Ozs7Ozs7O0NBU0MsR0FDTSxTQUFTTSxPQUFPQyxJQUFJLEVBQUVDLE9BQU87SUFDbEMsT0FBT0MsWUFBWTtRQUNqQixJQUFJRjtJQUNOLEdBQUcsSUFBSUEsTUFBTUM7QUFDZjtBQUVBOztDQUVDLEdBQ0QsU0FBU0MsWUFBWUMsT0FBTyxFQUFFQyxHQUFHLEVBQUVDLEtBQUssRUFBRUosT0FBTztJQUMvQyxJQUFJSyxNQUFNQyxPQUFPLENBQUNGLFFBQVE7UUFDeEIsT0FBT0osUUFBUU8sSUFBSSxDQUFDTCxTQUFTQyxLQUFLSyxZQUFZSixPQUFPSjtJQUN2RCxPQUFPLElBQUlJLFNBQVNiLFFBQVFhLFdBQVcsWUFBWSxDQUFDUCxvRUFBZ0JBLENBQUNPLFFBQVE7UUFDM0UsNENBQTRDO1FBQzVDLGtFQUFrRTtRQUNsRSxPQUFPSixRQUFRTyxJQUFJLENBQUNMLFNBQVNDLEtBQUtNLGFBQWFMLE9BQU9KO0lBQ3hELE9BQU87UUFDTCxPQUFPQSxRQUFRTyxJQUFJLENBQUNMLFNBQVNDLEtBQUtDO0lBQ3BDO0FBQ0Y7QUFFQTs7Q0FFQyxHQUNELFNBQVNLLGFBQWFDLE1BQU0sRUFBRVYsT0FBTztJQUNuQ1csT0FBT0MsSUFBSSxDQUFDRixRQUFRRyxPQUFPLENBQUMsU0FBVVYsR0FBRztRQUN2QyxJQUFJQyxRQUFRSCxZQUFZUyxRQUFRUCxLQUFLTyxNQUFNLENBQUNQLElBQUksRUFBRUg7UUFDbEQsSUFBSUksVUFBVVUsV0FBVztZQUN2QkosTUFBTSxDQUFDUCxJQUFJLEdBQUdDO1FBQ2hCLE9BQU87WUFDTCxPQUFPTSxNQUFNLENBQUNQLElBQUk7UUFDcEI7SUFDRjtJQUNBLE9BQU9PO0FBQ1Q7QUFFQTs7Q0FFQyxHQUNELFNBQVNGLFlBQVlPLEtBQUssRUFBRWYsT0FBTztJQUNqQyxJQUFLLElBQUlnQixJQUFJLEdBQUdBLElBQUlELE1BQU1FLE1BQU0sRUFBRUQsSUFBSztRQUNyQ0QsS0FBSyxDQUFDQyxFQUFFLEdBQUdmLFlBQVljLE9BQU9DLElBQUksSUFBSUQsS0FBSyxDQUFDQyxFQUFFLEVBQUVoQjtJQUNsRDtJQUNBLE9BQU9lO0FBQ1QsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi9ub2RlX21vZHVsZXMvbG9zc2xlc3MtanNvbi9saWIvZXNtL3Jldml2ZS5qcz8xZmM1Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9LCBfdHlwZW9mKG9iaik7IH1cbmltcG9ydCB7IGlzTG9zc2xlc3NOdW1iZXIgfSBmcm9tICcuL0xvc3NsZXNzTnVtYmVyLmpzJztcbi8qKlxuICogUmV2aXZlIGEganNvbiBvYmplY3QuXG4gKiBBcHBsaWVzIHRoZSByZXZpdmVyIGZ1bmN0aW9uIHJlY3Vyc2l2ZWx5IG9uIGFsbCB2YWx1ZXMgaW4gdGhlIEpTT04gb2JqZWN0LlxuICogQHBhcmFtIGpzb24gICBBIEpTT04gT2JqZWN0LCBBcnJheSwgb3IgdmFsdWVcbiAqIEBwYXJhbSByZXZpdmVyXG4gKiAgICAgICAgICAgICAgQSByZXZpdmVyIGZ1bmN0aW9uIGludm9rZWQgd2l0aCBhcmd1bWVudHMgYGtleWAgYW5kIGB2YWx1ZWAsXG4gKiAgICAgICAgICAgICAgd2hpY2ggbXVzdCByZXR1cm4gYSByZXBsYWNlbWVudCB2YWx1ZS4gVGhlIGZ1bmN0aW9uIGNvbnRleHRcbiAqICAgICAgICAgICAgICAoYHRoaXNgKSBpcyB0aGUgT2JqZWN0IG9yIEFycmF5IHRoYXQgY29udGFpbnMgdGhlIGN1cnJlbnRseVxuICogICAgICAgICAgICAgIGhhbmRsZWQgdmFsdWUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXZpdmUoanNvbiwgcmV2aXZlcikge1xuICByZXR1cm4gcmV2aXZlVmFsdWUoe1xuICAgICcnOiBqc29uXG4gIH0sICcnLCBqc29uLCByZXZpdmVyKTtcbn1cblxuLyoqXG4gKiBSZXZpdmUgYSB2YWx1ZVxuICovXG5mdW5jdGlvbiByZXZpdmVWYWx1ZShjb250ZXh0LCBrZXksIHZhbHVlLCByZXZpdmVyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIHJldHVybiByZXZpdmVyLmNhbGwoY29udGV4dCwga2V5LCByZXZpdmVBcnJheSh2YWx1ZSwgcmV2aXZlcikpO1xuICB9IGVsc2UgaWYgKHZhbHVlICYmIF90eXBlb2YodmFsdWUpID09PSAnb2JqZWN0JyAmJiAhaXNMb3NzbGVzc051bWJlcih2YWx1ZSkpIHtcbiAgICAvLyBub3RlIHRoZSBzcGVjaWFsIGNhc2UgZm9yIExvc3NsZXNzTnVtYmVyLFxuICAgIC8vIHdlIGRvbid0IHdhbnQgdG8gaXRlcmF0ZSBvdmVyIHRoZSBpbnRlcm5hbHMgb2YgYSBMb3NzbGVzc051bWJlclxuICAgIHJldHVybiByZXZpdmVyLmNhbGwoY29udGV4dCwga2V5LCByZXZpdmVPYmplY3QodmFsdWUsIHJldml2ZXIpKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gcmV2aXZlci5jYWxsKGNvbnRleHQsIGtleSwgdmFsdWUpO1xuICB9XG59XG5cbi8qKlxuICogUmV2aXZlIHRoZSBwcm9wZXJ0aWVzIG9mIGFuIG9iamVjdFxuICovXG5mdW5jdGlvbiByZXZpdmVPYmplY3Qob2JqZWN0LCByZXZpdmVyKSB7XG4gIE9iamVjdC5rZXlzKG9iamVjdCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIHZhbHVlID0gcmV2aXZlVmFsdWUob2JqZWN0LCBrZXksIG9iamVjdFtrZXldLCByZXZpdmVyKTtcbiAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgZGVsZXRlIG9iamVjdFtrZXldO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBvYmplY3Q7XG59XG5cbi8qKlxuICogUmV2aXZlIHRoZSBwcm9wZXJ0aWVzIG9mIGFuIEFycmF5XG4gKi9cbmZ1bmN0aW9uIHJldml2ZUFycmF5KGFycmF5LCByZXZpdmVyKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICBhcnJheVtpXSA9IHJldml2ZVZhbHVlKGFycmF5LCBpICsgJycsIGFycmF5W2ldLCByZXZpdmVyKTtcbiAgfVxuICByZXR1cm4gYXJyYXk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXZpdmUuanMubWFwIl0sIm5hbWVzIjpbIl90eXBlb2YiLCJvYmoiLCJTeW1ib2wiLCJpdGVyYXRvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiaXNMb3NzbGVzc051bWJlciIsInJldml2ZSIsImpzb24iLCJyZXZpdmVyIiwicmV2aXZlVmFsdWUiLCJjb250ZXh0Iiwia2V5IiwidmFsdWUiLCJBcnJheSIsImlzQXJyYXkiLCJjYWxsIiwicmV2aXZlQXJyYXkiLCJyZXZpdmVPYmplY3QiLCJvYmplY3QiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsInVuZGVmaW5lZCIsImFycmF5IiwiaSIsImxlbmd0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lossless-json/lib/esm/revive.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lossless-json/lib/esm/reviveDate.js":
/*!**********************************************************!*\
  !*** ./node_modules/lossless-json/lib/esm/reviveDate.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reviveDate: () => (/* binding */ reviveDate)\n/* harmony export */ });\n/**\n * Revive a string containing an ISO 8601 date string into a JavaScript `Date` object\n */ function reviveDate(key, value) {\n    return typeof value === \"string\" && isoDateRegex.test(value) ? new Date(value) : value;\n}\n// Matches strings like \"2022-08-25T09:39:19.288Z\"\nvar isoDateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/; //# sourceMappingURL=reviveDate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbG9zc2xlc3MtanNvbi9saWIvZXNtL3Jldml2ZURhdGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztDQUVDLEdBQ00sU0FBU0EsV0FBV0MsR0FBRyxFQUFFQyxLQUFLO0lBQ25DLE9BQU8sT0FBT0EsVUFBVSxZQUFZQyxhQUFhQyxJQUFJLENBQUNGLFNBQVMsSUFBSUcsS0FBS0gsU0FBU0E7QUFDbkY7QUFFQSxrREFBa0Q7QUFDbEQsSUFBSUMsZUFBZSxpREFDbkIsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4vbm9kZV9tb2R1bGVzL2xvc3NsZXNzLWpzb24vbGliL2VzbS9yZXZpdmVEYXRlLmpzPzc5NjAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXZpdmUgYSBzdHJpbmcgY29udGFpbmluZyBhbiBJU08gODYwMSBkYXRlIHN0cmluZyBpbnRvIGEgSmF2YVNjcmlwdCBgRGF0ZWAgb2JqZWN0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXZpdmVEYXRlKGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgaXNvRGF0ZVJlZ2V4LnRlc3QodmFsdWUpID8gbmV3IERhdGUodmFsdWUpIDogdmFsdWU7XG59XG5cbi8vIE1hdGNoZXMgc3RyaW5ncyBsaWtlIFwiMjAyMi0wOC0yNVQwOTozOToxOS4yODhaXCJcbnZhciBpc29EYXRlUmVnZXggPSAvXlxcZHs0fS1cXGR7Mn0tXFxkezJ9VFxcZHsyfTpcXGR7Mn06XFxkezJ9XFwuXFxkezN9WiQvO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmV2aXZlRGF0ZS5qcy5tYXAiXSwibmFtZXMiOlsicmV2aXZlRGF0ZSIsImtleSIsInZhbHVlIiwiaXNvRGF0ZVJlZ2V4IiwidGVzdCIsIkRhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lossless-json/lib/esm/reviveDate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lossless-json/lib/esm/stringify.js":
/*!*********************************************************!*\
  !*** ./node_modules/lossless-json/lib/esm/stringify.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringify: () => (/* binding */ stringify)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/lossless-json/lib/esm/utils.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\n\n/**\n * The LosslessJSON.stringify() method converts a JavaScript value to a JSON string,\n * optionally replacing values if a replacer function is specified, or\n * optionally including only the specified properties if a replacer array is specified.\n *\n * @param value\n * The value to convert to a JSON string.\n *\n * @param [replacer]\n * A function that alters the behavior of the stringification process,\n * or an array of String and Number objects that serve as a whitelist for\n * selecting the properties of the value object to be included in the JSON string.\n * If this value is null or not provided, all properties of the object are\n * included in the resulting JSON string.\n *\n * @param [space]\n * A String or Number object that's used to insert white space into the output\n * JSON string for readability purposes. If this is a Number, it indicates the\n * number of space characters to use as white space; this number is capped at 10\n * if it's larger than that. Values less than 1 indicate that no space should be\n * used. If this is a String, the string (or the first 10 characters of the string,\n * if it's longer than that) is used as white space. If this parameter is not\n * provided (or is null), no white space is used.\n *\n * @param [numberStringifiers]\n * An optional list with additional number stringifiers, for example to serialize\n * a BigNumber. The output of the function must be valid stringified JSON.\n * When `undefined` is returned, the property will be deleted from the object.\n * The difference with using a `replacer` is that the output of a `replacer`\n * must be JSON and will be stringified afterwards, whereas the output of the\n * `numberStringifiers` is already stringified JSON.\n *\n * @returns Returns the string representation of the JSON object.\n */ function stringify(value, replacer, space, numberStringifiers) {\n    var resolvedSpace = resolveSpace(space);\n    var replacedValue = typeof replacer === \"function\" ? replacer.call({\n        \"\": value\n    }, \"\", value) : value;\n    return stringifyValue(replacedValue, \"\");\n    /**\n   * Stringify a value\n   */ function stringifyValue(value, indent) {\n        if (Array.isArray(numberStringifiers)) {\n            var stringifier = numberStringifiers.find(function(item) {\n                return item.test(value);\n            });\n            if (stringifier) {\n                var str = stringifier.stringify(value);\n                if (typeof str !== \"string\" || !(0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isNumber)(str)) {\n                    throw new Error(\"Invalid JSON number: \" + \"output of a number stringifier must be a string containing a JSON number \" + \"(output: \".concat(str, \")\"));\n                }\n                return str;\n            }\n        }\n        // boolean, null, number, string, or date\n        if (typeof value === \"boolean\" || typeof value === \"number\" || typeof value === \"string\" || value === null || value instanceof Date || value instanceof Boolean || value instanceof Number || value instanceof String) {\n            return JSON.stringify(value);\n        }\n        // lossless number, the secret ingredient :)\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        if (value && value.isLosslessNumber) {\n            return value.toString();\n        }\n        // BigInt\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        // Array\n        if (Array.isArray(value)) {\n            return stringifyArray(value, indent);\n        }\n        // Object (test lastly!)\n        if (value && _typeof(value) === \"object\") {\n            return stringifyObject(value, indent);\n        }\n        return undefined;\n    }\n    /**\n   * Stringify an array\n   */ function stringifyArray(array, indent) {\n        if (array.length === 0) {\n            return \"[]\";\n        }\n        var childIndent = resolvedSpace ? indent + resolvedSpace : undefined;\n        var str = resolvedSpace ? \"[\\n\" : \"[\";\n        for(var i = 0; i < array.length; i++){\n            var item = typeof replacer === \"function\" ? replacer.call(array, String(i), array[i]) : array[i];\n            if (resolvedSpace) {\n                str += childIndent;\n            }\n            if (typeof item !== \"undefined\" && typeof item !== \"function\") {\n                str += stringifyValue(item, childIndent);\n            } else {\n                str += \"null\";\n            }\n            if (i < array.length - 1) {\n                str += resolvedSpace ? \",\\n\" : \",\";\n            }\n        }\n        str += resolvedSpace ? \"\\n\" + indent + \"]\" : \"]\";\n        return str;\n    }\n    /**\n   * Stringify an object\n   */ function stringifyObject(object, indent) {\n        if (typeof object.toJSON === \"function\") {\n            return stringify(object.toJSON(), replacer, space, undefined);\n        }\n        var keys = Array.isArray(replacer) ? replacer.map(String) : Object.keys(object);\n        if (keys.length === 0) {\n            return \"{}\";\n        }\n        var childIndent = resolvedSpace ? indent + resolvedSpace : undefined;\n        var first = true;\n        var str = resolvedSpace ? \"{\\n\" : \"{\";\n        keys.forEach(function(key) {\n            var value = typeof replacer === \"function\" ? replacer.call(object, key, object[key]) : object[key];\n            if (includeProperty(key, value)) {\n                if (first) {\n                    first = false;\n                } else {\n                    str += resolvedSpace ? \",\\n\" : \",\";\n                }\n                var keyStr = JSON.stringify(key);\n                str += resolvedSpace ? childIndent + keyStr + \": \" : keyStr + \":\";\n                str += stringifyValue(value, childIndent);\n            }\n        });\n        str += resolvedSpace ? \"\\n\" + indent + \"}\" : \"}\";\n        return str;\n    }\n    /**\n   * Test whether to include a property in a stringified object or not.\n   */ function includeProperty(key, value) {\n        return typeof value !== \"undefined\" && typeof value !== \"function\" && _typeof(value) !== \"symbol\";\n    }\n}\n/**\n * Resolve a JSON stringify space:\n * replace a number with a string containing that number of spaces\n */ function resolveSpace(space) {\n    if (typeof space === \"number\") {\n        return \" \".repeat(space);\n    }\n    if (typeof space === \"string\" && space !== \"\") {\n        return space;\n    }\n    return undefined;\n} //# sourceMappingURL=stringify.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lossless-json/lib/esm/stringify.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lossless-json/lib/esm/types.js":
/*!*****************************************************!*\
  !*** ./node_modules/lossless-json/lib/esm/types.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbG9zc2xlc3MtanNvbi9saWIvZXNtL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uL25vZGVfbW9kdWxlcy9sb3NzbGVzcy1qc29uL2xpYi9lc20vdHlwZXMuanM/NzdiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lossless-json/lib/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/lossless-json/lib/esm/utils.js":
/*!*****************************************************!*\
  !*** ./node_modules/lossless-json/lib/esm/utils.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UnsafeNumberReason: () => (/* binding */ UnsafeNumberReason),\n/* harmony export */   extractSignificantDigits: () => (/* binding */ extractSignificantDigits),\n/* harmony export */   getUnsafeNumberReason: () => (/* binding */ getUnsafeNumberReason),\n/* harmony export */   isInteger: () => (/* binding */ isInteger),\n/* harmony export */   isNumber: () => (/* binding */ isNumber),\n/* harmony export */   isSafeNumber: () => (/* binding */ isSafeNumber),\n/* harmony export */   toSafeNumberOrThrow: () => (/* binding */ toSafeNumberOrThrow)\n/* harmony export */ });\n/**\n * Test whether a string contains an integer number\n */ function isInteger(value) {\n    return INTEGER_REGEX.test(value);\n}\nvar INTEGER_REGEX = /^-?[0-9]+$/;\n/**\n * Test whether a string contains a number\n * http://stackoverflow.com/questions/13340717/json-numbers-regular-expression\n */ function isNumber(value) {\n    return NUMBER_REGEX.test(value);\n}\nvar NUMBER_REGEX = /^-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?$/;\n/**\n * Test whether a string can be safely represented with a number\n * without information loss.\n *\n * When approx is true, floating point numbers that lose a few digits but\n * are still approximately equal in value are considered safe too.\n * Integer numbers must still be exactly equal.\n */ function isSafeNumber(value, config) {\n    var num = parseFloat(value);\n    var str = String(num);\n    var v = extractSignificantDigits(value);\n    var s = extractSignificantDigits(str);\n    if (v === s) {\n        return true;\n    }\n    if ((config === null || config === void 0 ? void 0 : config.approx) === true) {\n        // A value is approximately equal when:\n        // 1. it is a floating point number, not an integer\n        // 2. it has at least 14 digits\n        // 3. the first 14 digits are equal\n        var requiredDigits = 14;\n        if (!isInteger(value) && s.length >= requiredDigits && v.startsWith(s.substring(0, requiredDigits))) {\n            return true;\n        }\n    }\n    return false;\n}\nvar UnsafeNumberReason = /*#__PURE__*/ function(UnsafeNumberReason) {\n    UnsafeNumberReason[\"underflow\"] = \"underflow\";\n    UnsafeNumberReason[\"overflow\"] = \"overflow\";\n    UnsafeNumberReason[\"truncate_integer\"] = \"truncate_integer\";\n    UnsafeNumberReason[\"truncate_float\"] = \"truncate_float\";\n    return UnsafeNumberReason;\n}({});\n/**\n * When the provided value is an unsafe number, describe what the reason is:\n * overflow, underflow, truncate_integer, or truncate_float.\n * Returns undefined when the value is safe.\n */ function getUnsafeNumberReason(value) {\n    if (isSafeNumber(value, {\n        approx: false\n    })) {\n        return undefined;\n    }\n    if (isInteger(value)) {\n        return UnsafeNumberReason.truncate_integer;\n    }\n    var num = parseFloat(value);\n    if (!isFinite(num)) {\n        return UnsafeNumberReason.overflow;\n    }\n    if (num === 0) {\n        return UnsafeNumberReason.underflow;\n    }\n    return UnsafeNumberReason.truncate_float;\n}\n/**\n * Convert a string into a number when it is safe to do so.\n * Throws an error otherwise, explaining the reason.\n */ function toSafeNumberOrThrow(value, config) {\n    var number = parseFloat(value);\n    var unsafeReason = getUnsafeNumberReason(value);\n    if ((config === null || config === void 0 ? void 0 : config.approx) === true ? unsafeReason && unsafeReason !== UnsafeNumberReason.truncate_float : unsafeReason) {\n        var unsafeReasonText = unsafeReason.replace(/_\\w+$/, \"\");\n        throw new Error(\"Cannot safely convert to number: \" + \"the value '\".concat(value, \"' would \").concat(unsafeReasonText, \" and become \").concat(number));\n    }\n    return number;\n}\n/**\n * Get the significant digits of a number.\n *\n * For example:\n *   '2.34' returns '234'\n *   '-77' returns '77'\n *   '0.003400' returns '34'\n *   '120.5e+30' returns '1205'\n **/ function extractSignificantDigits(value) {\n    return value// from \"-0.250e+30\" to \"-0.250\"\n    .replace(EXPONENTIAL_PART_REGEX, \"\")// from \"-0.250\" to \"-0250\"\n    .replace(DOT_REGEX, \"\")// from \"-0250\" to \"-025\"\n    .replace(TRAILING_ZEROS_REGEX, \"\")// from \"-025\" to \"25\"\n    .replace(LEADING_MINUS_AND_ZEROS_REGEX, \"\");\n}\nvar EXPONENTIAL_PART_REGEX = /[eE][+-]?\\d+$/;\nvar LEADING_MINUS_AND_ZEROS_REGEX = /^-?(0*)?/;\nvar DOT_REGEX = /\\./;\nvar TRAILING_ZEROS_REGEX = /0+$/; //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lossless-json/lib/esm/utils.js\n");

/***/ })

};
;